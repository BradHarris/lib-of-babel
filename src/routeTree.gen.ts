/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkersImport } from './routes/workers'
import { Route as PostImport } from './routes/post'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WorkersRoute = WorkersImport.update({
  id: '/workers',
  path: '/workers',
  getParentRoute: () => rootRoute,
} as any)

const PostRoute = PostImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostImport
      parentRoute: typeof rootRoute
    }
    '/workers': {
      id: '/workers'
      path: '/workers'
      fullPath: '/workers'
      preLoaderRoute: typeof WorkersImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/post': typeof PostRoute
  '/workers': typeof WorkersRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/post': typeof PostRoute
  '/workers': typeof WorkersRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/post': typeof PostRoute
  '/workers': typeof WorkersRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/post' | '/workers'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/post' | '/workers'
  id: '__root__' | '/' | '/post' | '/workers'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostRoute: typeof PostRoute
  WorkersRoute: typeof WorkersRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostRoute: PostRoute,
  WorkersRoute: WorkersRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/post",
        "/workers"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/post": {
      "filePath": "post.tsx"
    },
    "/workers": {
      "filePath": "workers.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
